user  qingqing;
worker_processes 8;

error_log  /home/logs/nginx/error.log  error;
pid        /run/nginx.pid;

worker_rlimit_nofile 307200;
worker_shutdown_timeout 3h;
events 
{
    use epoll;
    worker_connections 51200;
}

stream {
    #server_traffic_status_zone;
    proxy_buffer_size 64k ;
    proxy_connect_timeout 2s;
    proxy_next_upstream_timeout 45s;
    proxy_next_upstream_tries 2;
    proxy_timeout 10m;

    log_format basic '$remote_addr\t$time_iso8601\t$server_addr\t$server_port\t'
                    '$protocol\t$status\t$bytes_sent\t$bytes_received\t'
                    '$upstream_addr\t-\t$upstream_connect_time\t$upstream_session_time\t$session_time';

    error_log  /home/logs/nginx/stream.error.log warn;
    access_log  /home/logs/nginx/stream.access.log  basic;
    access_log  syslog:server=rsyslog.idc.cedu.cn:515,facility=local7,severity=info,tag=stream basic;

    # 71 is office is default , 72 is pre
    map $server_addr  $dns_backend {
        172.22.12.71 "127.0.0.1:55";
        172.22.12.72 "127.0.0.1:56";
        default      "127.0.0.1:55";
    }
    map $server_addr  $mqtt_backend {
        172.22.12.70 "172.22.12.2:31884";
        172.22.12.71 "172.29.1.122:1883";
        172.22.12.72 "211.148.18.231:1883";
        default      "172.29.1.122:1883";
    }

    map $server_addr  $actcp_backend {
        172.22.12.70 "172.22.12.2:31993";
        172.22.12.71 "172.22.12.2:31994";
        default      "172.22.12.2:31994";
    }

    include stream/*.conf;    

}


http {
    #vhost_traffic_status_zone shared:vhost_traffic_status:32m;
    #stream_server_traffic_status_zone;
    include    mime.types;
    default_type  application/octet-stream;

    include    gzip.conf;
    #include    core-proxy-params.conf;
    log_format main '$remote_addr\t$host\t$server_addr\t$server_port\t$server_protocol\t$scheme\t'
                    '$time_iso8601\t$request_method\t$request_length\t$uri\t$args\t$status\t'
                    '$body_bytes_sent\t$bytes_sent\t$http_referer\t$http_user_agent\t$http_x_forwarded_for\t$upstream_connect_time\t'
                    '$upstream_response_time\t$upstream_addr\t$upstream_status\t$request_time\t$app_context';

    log_format main_json escape=json '{"remote_addr":"$remote_addr","host":"$host","server_addr":"$server_addr","server_port":"$server_port",'
                    '"localtime":"$time_iso8601","request_method":"$request_method","request_length":"$request_length","document_uri":"$document_uri",'
                    '"args":"$args","status":"$status","body_bytes_sent":"$body_bytes_sent","server_protocol":"$server_protocol",'
                    '"scheme":"$scheme","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_x_forwarded_for":"$http_x_forwarded_for",'
                    '"upstream_response_time":"$upstream_response_time","upstream_addr":"$upstream_addr","upstream_status":"$upstream_status",'
                    '"request_time":"$request_time","app_context":"$app_context","upstream_connect_time":"$upstream_connect_time","qingqing_server_name":"$http_qingqing_server_name"}';

 
    proxy_next_upstream_tries 2;
    proxy_next_upstream error timeout non_idempotent invalid_header http_502 http_504;

    proxy_cache_path /dev/shm/nginx-cache-harbor levels=1:2 keys_zone=harbor:100m inactive=7d max_size=100m;

    sendfile     on;
    tcp_nopush   on;
    keepalive_timeout 1500;
    client_max_body_size 100m;
    client_header_timeout 90;
    client_header_buffer_size 64k;
    large_client_header_buffers 8 16k;
    server_names_hash_max_size 2048;
    server_names_hash_bucket_size 128;

    ssl_session_cache  builtin:10000 shared:SSL:20m ;
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3 ;

    proxy_temp_path  /dev/shm/proxy_temp  1 2;
    client_body_temp_path /dev/shm/client_body_temp 1 2;
   
    # http limit conn
    #limit_conn_zone $binary_remote_addr zone=addr:20m;
    #limit_conn addr 50;

    # 70 is dev , 71 is tst , 72 is pre
    map $server_addr $envtype {
        172.22.12.70 "-dev";
        172.22.12.71 "-tst";
        172.22.12.72 "";
        default      "-tst";
    }

    map $http_upgrade $connection_upgrade {
        default Upgrade;
        ''      '';
    }

    map $context $app_context {
      #include  context.map;
      default "-";
    } 

    map $app_server $app_upstream {
        #include      app_upstream.map;
        default      1;
    }

    #access_log  syslog:server=1.2.3.4:514,facility=local7,severity=info main;
    access_log /home/logs/nginx/http.access.log main;
    access_log  syslog:server=rsyslog.idc.cedu.cn:515,facility=local7,severity=info,tag=lblog main;
    access_log  syslog:server=rsyslog.idc.cedu.cn:515,facility=local7,severity=info,tag=jsonlog main_json;
    error_log  /home/logs/nginx/http.error.log error;

 
    ## websocket 
    server {
        server_name ~^(apiws|livews)-(tst|dev|tst1|tst2|tst3|fws|fat|lpt|uat)\.changingedu\.com$ ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        set $envtype "";
        set $envtype "$2";
        set $context "";
        access_log /home/logs/nginx/wss.access.log main;
        location ~ /(\w+) {
            set $context "$1";
            proxy_connect_timeout 2;
            proxy_read_timeout 900;
            proxy_send_timeout 900;
            proxy_http_version 1.1;
            proxy_set_header Host        "gateway.$envtype.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://docker-ingress;
        }
    }


    ##spin
    server {
        server_name spin.changingedu.com;
        listen 80;
        listen 443 ssl http2;
        #include s3_proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        client_max_body_size 1500m;
        location / {
          rewrite /auth/logout /auth/loggedOut redirect;
          proxy_intercept_errors on;
          proxy_pass http://docker-ingress;
          error_page 404 405 = @fallback;
          proxy_set_header Host  "spin-deck.changingedu.com";
          add_header Access-Control-Allow-Origin *;
        }
        location @fallback {
          proxy_pass http://docker-ingress;
          proxy_read_timeout 35;
          proxy_set_header Host  "spin.changingedu.com";
         
        }
    }

    #dataweb
    server {
        server_name dataweb.changingedu.com ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        if ( $scheme = "http" ) {
           return 301 "https://$host$request_uri" ;
        }
        location / {
          proxy_set_header scheme  $scheme;
          proxy_set_header Host    $Host;
          proxy_pass http://docker-ingress;
        }
        location /datasvc {
          proxy_set_header scheme  $scheme;
          proxy_set_header Host    "gateway.tst.idc.cedu.cn";
          proxy_pass http://docker-ingress;
        }

        location /comparesvc {
          proxy_set_header scheme  $scheme;
          proxy_set_header Host    "gateway.tst.idc.cedu.cn";
          proxy_pass http://docker-ingress;
        }
    }

    ## sonarqube
    server {
        server_name sonarqube.changingedu.com sonarqube.idc.cedu.cn ; 
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location / {
           proxy_set_header Host   "sonarqube.idc.cedu.cn";
           proxy_pass http://docker-ingress;
        }
    }
    server {
        server_name doraui.changingedu.com doraui.idc.cedu.cn ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location / {
           proxy_set_header Host   "doraui.changingedu.com";
           proxy_pass http://docker-ingress;
        }
    }
    server {
        server_name compass-icon.changingedu.com;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location / {
           proxy_set_header Host   "liveicons.tst.idc.cedu.cn";
           proxy_intercept_errors on;
           error_page  404 /index.html;
           proxy_pass http://docker-ingress;
        }
    }

    server {
        server_name compass-ui.changingedu.com ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location / {
           proxy_set_header Host   "uicompoment.tst.idc.cedu.cn";
           proxy_intercept_errors on;
           error_page  404 /index.html;
           proxy_pass http://docker-ingress;
        }
    }

    ##plantuml
    server { 
        server_name puml.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;
        
        if ( $scheme = "http" ) {
           return 301 "https://$host$request_uri" ;
        }
    
        location / {
           proxy_set_header Host    "puml.changingedu.com";
           proxy_read_timeout 55;
           proxy_pass http://docker-ingress;
        } 
    
    }
   
    #yapi 
    server {
        server_name yapi.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;

        location / {
           proxy_set_header Host    "yapitmp.changingedu.com";
           proxy_read_timeout 55;
           proxy_pass http://docker-ingress;
        }

    }

    #yapitmp
    server {
        server_name yapitmp.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;

        location / {
           proxy_set_header Host    "yapi.changingedu.com";
           proxy_read_timeout 55;
           proxy_pass http://docker-ingress;
        }

    }

    ##appdashboard
    server {
        server_name appdashboard-shny.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;

        if ( $scheme = "http" ) {
           return 301 "https://$host$request_uri" ;
        }

        location / {
           proxy_set_header Host    "appdashboard-shny.changingedu.com";
           proxy_read_timeout 55;
           proxy_pass http://docker-ingress;
        }

    }
    ## skywalkingui
    server {
        server_name skywalkingui-shny.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;

        if ( $scheme = "http" ) {
           return 301 "https://$host$request_uri" ;
        }

        location / {
           proxy_set_header Host    "skywalkingui-shny.changingedu.com";
           proxy_read_timeout 55;
           proxy_pass http://docker-ingress;
        }

    }
    
    upstream s3-shny {
           server 172.22.12.7:7480 weight=10  max_fails=15 fail_timeout=5s;
           server 172.22.12.8:7480 weight=10  max_fails=15 fail_timeout=5s;
           keepalive 50;
    }
    ## ceph s3
    server {
        server_name s3-shny.changingedu.com s3-shny.idc.cedu.cn;
        listen 443 ssl http2 ;
        listen 80 ;
        #include s3_proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        client_max_body_size 1500m;
        location / {
           proxy_buffering off;
           proxy_pass http://s3-shny;
        }
    }
    ## harbor
    server {
        server_name harbor.changingedu.com docker.idc.cedu.cn; 
        listen 443 ssl http2 ;
        listen 80 ;
        #include s3_proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        client_max_body_size 3000m;
        
        location /v2/_catalog {
           proxy_cache harbor;
           proxy_cache_key "$host$request_uri";
           proxy_cache_valid 200 304 3h;
           proxy_cache_use_stale error updating timeout;
           proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
           proxy_hide_header X-Accel-Expires;
           proxy_hide_header Expires;
           proxy_hide_header Cache-Control;
           proxy_hide_header set-cookie;
           expires 5m;
           proxy_pass_request_headers off;
           proxy_set_header Host   "harbor.changingedu.com";
           proxy_set_header Authorization 'Basic YWRtaW46UWluZ3FpbmdAZWR1MTIz';
           proxy_pass http://docker-ingress;
        }
        location /chartrepo/charts/index.yaml {
           proxy_cache harbor;
           proxy_cache_key "$host$request_uri";
           proxy_cache_valid 200 304 3h;
           proxy_cache_use_stale error updating timeout;
           proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
           proxy_hide_header X-Accel-Expires;
           proxy_hide_header Expires;
           proxy_hide_header Cache-Control;
           proxy_hide_header set-cookie;
           expires 5m; 
           proxy_pass_request_headers off;
           proxy_set_header Host   "harbor.changingedu.com";
           proxy_set_header Authorization 'Basic YWRtaW46UWluZ3FpbmdAZWR1MTIz';
           proxy_pass http://docker-ingress;
        }
       
        location / {
           proxy_buffering off;
           proxy_set_header Host   "harbor.changingedu.com";
           proxy_set_header Authorization 'Basic YWRtaW46UWluZ3FpbmdAZWR1MTIz';
           proxy_pass http://docker-ingress;
        }
    }
    ## harbor online s3
    server {
        server_name s3-shjy.idc.cedu.cn s3-shjy.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;
        # default public
        client_max_body_size 3000m;
        location / {
           proxy_buffering off;
           proxy_set_header Host   "s3-shjy.changingedu.com";
           proxy_pass http://103.20.249.210;
        }
    }
    ## urlconfsvc
    server {
        server_name urlconfweb.changingedu.com; 
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location /urlconfsvc {
           proxy_buffering off;
           proxy_set_header Host   "gateway.tst.idc.cedu.cn";
           proxy_pass http://docker-ingress;
        }
    }

    ## is office from ta
    server {
        server_name is-office.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        return 200 "pass";
    }


    ## cas
    server {
        server_name cas.changingedu.com ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location / {
           proxy_redirect http://cas-tst.changingedu.com/ https://cas.changingedu.com/;
           proxy_set_header Host   "cas.changingedu.com";
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
           #proxy_pass http://docker-ingress;
            proxy_pass http://172.20.12.165:8080;
        }
    }
    server {
        server_name download.changingedu.com ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        rewrite ^/(.*) https://download-1251606527.file.myqcloud.com/$1;
    }

    server {
        server_name apollosecurity.changingedu.com apollo.changingedu.com;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        # default public
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location /apollosecurity {
           proxy_set_header Host   "apollo.changingedu.com";
           proxy_set_header scheme  $scheme;
           #proxy_pass http://proxy-cas-httpd;
           proxy_pass http://docker-ingress;
        }

        location /apollosecurity/api/pi {
           proxy_set_header Host   "apollo.changingedu.com";
           proxy_pass http://docker-ingress;
        }
    }


    ## 
    server {
        server_name argus-offline.changingedu.com ;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        if ( $scheme = "http" ) {
           return 301 "https://$host$request_uri" ;
        }
        location / {
          proxy_set_header scheme  $scheme;
          proxy_set_header Host    $Host;
          proxy_pass http://docker-ingress;
        }
    }

    ## 
    server {
        server_name spin-office.changingedu.com;
        listen 443 ssl http2 ;
        listen 80 ;
        include proxy.conf;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        location / {
           proxy_read_timeout 60s;
           proxy_set_header Host   $Host;
           proxy_pass http://docker-ingress;
        }
    }


    ##runtime  : cdn cache pb config (public)
    server {
         server_name  ~^cachepb(-stby)-(tst|dev|tst1|tst2|tst3|fws|fws1|fws2|fws3|fat|lpt|uat)\.changingedu\.com$;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;
         set $envtype "";
         set $envtype "$2";
         set $context "";
         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
         #include    core-proxy-params.conf;
         location ~ /(\w+)/api/cpb {
            set $context "$1";
            proxy_set_header Host        "gateway.$envtype.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            #proxy_pass http://docker-ingress;
            proxy_pass http://127.0.0.1:8081;
         }
    }
    ##runtime  : generic config (public)
    server {
         server_name  ~^(livegw|apigw|proxygw)-(tst1|tst2|tst3|fws|fws1|fws2|fws3|fat|lpt|uat)\.changingedu\.com$;
         listen 80 ;
         listen [::]:80;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;

         set $envtype "";
         set $envtype "$2";
         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
         #include    core-proxy-params.conf;
         set $context "";
         set $app_server "";

         location ^~ /mocksvc/ {
             proxy_pass http://172.20.13.160:8071;
         }

         location ~ /(\w+)/api/(pi|crontab|qqdeploy|mgtact)/ {
            set $context "$1";
            deny all ;
         }
		 
         location ~ /(\w+)/api/ {
            set $context "$1";
            set $app_server "$1";
            proxy_set_header Host        "gateway.$envtype.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }

         location = /clientip {
           default_type text/html;
           return 200 "$remote_addr";
         }

         location = /utimestamp  {
            default_type text/html;
            add_header Access-Control-Allow-Origin *;
            return 200 "$msec";
         }
         location = /timestamp  {
            default_type text/html;
            add_header Access-Control-Allow-Origin *;
            return 200 "$time_iso8601";
         }

    }

    ##runtime  : generic config (public)
    server {
         ## example1 : m-stby-dev.changingedu.com
         ## example2 : cdn-api-dev.changingedu.com
         ## exapmle3 : time-dev.changingedu.com
         ## exapmle4 : log-data-dev.changingedu.com
         server_name  ~^(cdn-)?(user-center|download-apk|zx-spider|admin-img|log-data)(-)(idc|tst|dev|tst1|tst2|tst3|fws1|fws2|fws3|fws|fat|lpt|uat)\.changingedu\.com$;
         server_name  ~^(cdn-)?(\w+)(-stby)?-(idc|tst|dev|tst1|tst2|tst3|fws|fws1|fws2|fws3|fat|lpt|uat)\.changingedu\.com$;
         server_name  ~^(cdn-)?(\w+)(-stby2)?-(idc|tst|dev|tst1|tst2|tst3|fws|fws1|fws2|fws3|fat|lpt|uat)\.changingedu\.com$;
         # set variable
         set $runenvtype $4;
         # replace : context $2 , runenvtype $4
         set $prefix "$2-$4";
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 default;
         listen 9991 ssl http2 default; ## aochuang 
         listen [::]:443 ssl http2 default;
         
         access_log off;
         set $context "";
         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
         #include    core-proxy-params.conf;
         location ~ /(\w+) {
            proxy_buffering on;
            set $context "$1";
            proxy_set_header Host        "$prefix.changingedu.com";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$runenvtype" = "dev" ) { proxy_pass http://127.0.0.1:81;}
            if ( "$runenvtype" = "tst" ) { proxy_pass http://127.0.0.1:82;}
            if ( "$runenvtype" = "idc" ) { proxy_pass http://127.0.0.1:82;}
            proxy_pass http://127.0.0.1:84;
         }

         location = / {
            proxy_set_header Host        "$prefix.changingedu.com";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$runenvtype" = "dev" ) { proxy_pass http://127.0.0.1:81;}
            if ( "$runenvtype" = "tst" ) { proxy_pass http://127.0.0.1:82;}
            if ( "$runenvtype" = "idc" ) { proxy_pass http://127.0.0.1:82;}
            proxy_pass http://127.0.0.1:84;
         }
    }


    server {
         server_name  livegw-tst.changingedu.com livegw-stby-tst.changingedu.com livegw-stby2-tst.changingedu.com
                      proxygw-tst.changingedu.com proxygw-stby-tst.changingedu.com proxygw-stby2-tst.changingedu.com
					  api.changingedu.com 
                      apigw-tst.changingedu.com apigw-stby-tst.changingedu.com apigw-stby2-tst.changingedu.com;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;

         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
          
         #include    core-proxy-params.conf;

         set $context "";
         set $app_server "";
         location ^~ /mocksvc/ {
             proxy_pass http://172.20.13.160:8071;
         }

         location ~ /(\w+)/api/(pi|crontab|qqdeploy|mgtact)/ {
            set $context "$1";
            deny all ;
         }
         
		 # Classroom core interface
	     location ~ /(/imgsvc)|(/passportsvc)|(/livingcenter)|(/liveroom)|(/webapi)|(/svc)(/coursewaresvc)(/livesvc/api/(h5)*pt/v1/live_order_course/get_teacher_base_info)|(/livesvc/api/pt/v1/user/user_options)|(/livesvc/api/pt/v2/device_info/user_device_info)|(/livesvc/api/pb/v1/agora/config)|(/liveroutersvc/api/pi/v1/live_room/user_connection_infos)|(/liveroutersvc/api/pi/v1/live_room/user_enter)|(/liveroutersvc/api/pi/v1/system_cmd/send_signal_to_user)|(/liveroutersvc/api/pi/v1/live_room/get_user_online_status)|(/livebmsvc/api/pi/v1/live_room/get_user_online_status)|(/livesvc/api/pi/v2/live_answer/get_teacher_status_by_ids)|(/livesvc/api/(h5)*pt/v1/live_order_course/ext_info_list)|(/livebmsvc/api/pi/v1/live_room/user_connection_infos)|(/livebmsvc/api/pi/v1/user/latest_line_name)|(/livesvc/api/pt/v1/live_order_course/pre_app_student_enter_room)|(/livesvc/api/pt/v1/live_order_course/end_class)|(/livesvc/api/pt/v2/live_order_course/start_class)|(/livesvc/api/pt/v3/live_order_course/student_order_course_coursewares)|(/livesvc/api/pt/v2/live_order_course/user_enter)|(/livesvc/api/pt/v2/whiteboard/add_white_board)|(/liveroutersvc/api/pt/v1/client/query_broker_info)|(/livesvc/api/pb/v1/agora/config)|(/liverressvc/api/pt/v3/live_order_course/communication_authinfo)|(/livingcenter/api/pt/v1/communication/switch_cmd)|(/livingcenter/api/pt/v1/live/communication_authinfo){
            proxy_set_header Host        "gateway.tst.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }
		 
		 # white board  core interface
	     location ~ /(/livebmsvc/api/pi/v2/broker/broker_register)|(/livebmsvc/api/pi/v1/client/client_not_exist)|(/livebmsvc/api/pi/v1/client/disconnect)|(/livebmsvc/api/pi/v1/client/connect)|(/livesvc/api/pt/v1/upgrade/check_upgrade){
            proxy_set_header Host        "gateway.tst.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }

         # courseware  core interface
	     location ~ /(/livesvc/api/(h5)*pt/v7/live_order_course/general_live_order_course_info)|(/liveteachingsvc/api/h5pt/v1/live_order_course/bind_last_course_homework)|(/livesvc/api/(h5)*pt/v1/live_order_course/teacher/week_view)|(/livesvc/api/(h5)*pt/v6/live_order_course/day_list)|(/livesvc/api/(h5)*pt/v1/courseware_repository/view)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/trcloud/create)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/paper/create)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/paper/edit_url)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/paper/save)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/paper/view)|(/livesvc/api/(h5)*pt/v4/live_order_course/get_media_courseware)|(/livesvc/api/(h5)*pt/v3/live_order_course/courseware_page)|(/playsvc/api/pb/v2/play_info/audio)|(/playsvc/api/pb/v3/play_info/video)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/trcloud/view)|(/liveteachingsvc/api/(h5)*pt/v1/tr_courseware/paged_query)|(/livesearchsvc/api/pi/v1/tr_courseware/paged_query)|(/liveteachingsvc/api/(h5)*pt/v1/courseware/combine_material/create)|(/livesvc/api/cpb/v1/live_config/jy_course_list)|(/liveteachingsvc/api/cpb/v2/course_system/get_formal_course_system_relation)|(/liveteachingsvc/api/cpb/v2/course_system/get_evaluation_course_system_relation)|(/liveteachingsvc/api/(h5)*pt/v1/share_courseware/info)|(/liveteachingsvc/api/pb/v1/share_courseware/trcloud/view)|(/livesvc/api/(h5)*pt/v1/live_order_course/preparing_info)|(/liveteachingsvc/api/(h5)*pt/v1/live_order_course/add_resource_to_course)|(/liveteachingsvc/api/(h5)*pt/v1/live_order_course/ack_using_courseware)|(/livesvc/api/(h5)*pt/v1/homework/use_in_course)|(/livesvc/api/pt/v1/live_order_course/study_material/imgs)|(/liveteachingsvc/api/(h5)*pt/v1/live_order_course/add_courseware_by_onshelf_id)|(/livesvc/api/pt/v3/live_order_course/live_order_course_info)|(/livesvc/api/pt/v1/live_order_course/live_order_course_minor_info)|(/livesvc/api/pt/v3/live_order_course/list_homework)|(/livesvc/api/pt/v2/image/qcloud_upload_auth)|(/imgsvc/api/pb/v1/media/add/image)|(/playsvc/api/pb/v2/play_info/image_urls)|(/liveteachingsvc/api/(h5)*pt/v2/live_order_course/preparing_course_info)|(/liveteachingsvc/api/cpb/v2/course_system/get_formal_class_content)|(/liveteachingsvc/api/h5pt/v1/live_order_course/save_prepare_course_info){
            proxy_set_header Host        "gateway.tst.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }

         # beike  core interface
	     location ~ /(/liveteachingsvc/api/h5pt/v1/live_order_course/bind_last_course_homework)|(/liveteachingsvc/api/h5pt/v1/live_order_course/class_content_recommend_courseware)|(/livesvc/api/h5pt/v2/live_order_course/batch_live_order_course_view)|(/livesvc/api/h5pt/v2/image/object_upload_auth)|(/liveteachingsvc/api/h5pt/v2/live_order_course/prepare_course_finish){
            proxy_set_header Host        "gateway.tst.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }

	     #Global error return 500 or 503
	     location ~ /(\w+) {
		    #return 500 "ops(172.22.13.105) default mock error!";
		    #return 503 "ops(172.22.13.105) default mock forbidden!";
         }
		 
         location ~ /(\w+) {
            set $context "$1";
            set $app_server "$1";
            proxy_set_header Host        "gateway.tst.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }

         location = /clientip {
           default_type text/html;
           return 200 "$remote_addr";
         }
         location = /utimestamp  {
            add_header Access-Control-Allow-Origin *;
            default_type text/html;
            return 200 "$msec";
         } 
         location = /timestamp  {
            add_header Access-Control-Allow-Origin *;
            default_type text/html;
            return 200 "$time_iso8601";
         }
    }

    server {
         server_name  livegw-dev.changingedu.com livegw-stby-dev.changingedu.com  livegw-stby2-dev.changingedu.com
					  proxygw-dev.changingedu.com proxygw-stby-dev.changingedu.com  proxygw-stby2-dev.changingedu.com
                      apigw-dev.changingedu.com  apigw-stby-dev.changingedu.com apigw-stby2-dev.changingedu.com;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;

         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
         #include    core-proxy-params.conf;
         set $context "";
         set $app_server "";

         location ~ /(\w+)/api/(pi|crontab|qqdeploy|mgtact)/ {
            set $context "$1";
            deny all ;
         }

         location ~ /(\w+) {
            set $context "$1";
            set $app_server "$1";
            proxy_set_header Host        "gateway.dev.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( "$app_upstream" = "0" ) { proxy_pass http://docker-livecore;}
            proxy_pass http://docker-ingress;
         }

         location = /clientip {
           default_type text/html;
           return 200 "$remote_addr";
         } 

         location = /utimestamp  {
            add_header Access-Control-Allow-Origin *;
            default_type text/html;
            return 200 "$msec";
         }
         location = /timestamp  {
            add_header Access-Control-Allow-Origin *;
            default_type text/html;
            return 200 "$time_iso8601";
         }
    }
    
    # seo
    server {
        server_name *.shqqedu.com    *.qqjjedu.com 
                    *.jiajiaoqq.com  *.shqingqing.com 
                    *.shqqjiajiao.com;
        listen 80 ;
        listen 443 ssl http2 ;
        set $context "fronth5";
        
        ssl_certificate      cert/shqqedu.com.crt;
        ssl_certificate_key  cert/shqqedu.com.key;
        #include    core-proxy-params.conf;
        location /favicon.ico {
          root /home/qingqing/apps ;
        }
    
        location / {
           proxy_set_header Host   "front-tst.changingedu.com";
           proxy_pass http://127.0.0.1:82;
        }
    }


    ## pre public Domain
    server {
         server_name  ~^(\S+)\.changingedu\.com$;
         # host replace
         #set $prefix $1;
         listen 172.22.12.72:80 default;
         listen [::]:80 default;
         listen 172.22.12.72:443 ssl http2 ;
         listen [::]:443 ssl http2 ;

         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;

         #include    core-proxy-params.conf;
         location / {
            proxy_set_header Host        "$host";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:83;
         }
    } 
    # hfjy.com pre
    server {
         server_name  ~^(\S+)\.hfjy\.com$;
         listen 172.22.12.72:80 ;
         listen 172.22.12.72:443 ssl http2 ;

         # default public
         ssl_certificate      cert/hfjy.com.pem;
         ssl_certificate_key  cert/hfjy.com.key;

         include    core-proxy-params.conf;
         location / {
            proxy_set_header Host        "$host";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:83;
         }
    }
    # apigw hfjy.com	
    server {
         server_name  ~^(apigw|livegw|proxygw|cachepb)-(\S+)\.hfjy\.com$;
         listen 80 ;
         listen 443 ssl http2 ;

         # default public
         ssl_certificate      cert/hfjy.com.pem;
         ssl_certificate_key  cert/hfjy.com.key;
         
         set $envtype $2;

         include   proxy.conf;

         location ~ /(\w+)/api/(pi|crontab|qqdeploy|mgtact)/ {
            set $context "$1";
            deny all ;
         }
         
         location ~ /(\w+) {
           proxy_pass                        http://docker-ingress;
           proxy_set_header Host             "gateway.$envtype.idc.cedu.cn";
        }
    
        #location ~ /(\w+)/api/(pi|crontab|qqdeploy)/ {
        #   proxy_pass                        http://docker-ingress;
        #   proxy_set_header Host             "gateway.$envtype.idc.cedu.cn";
        #}
    }


    server {
        server_name static-tst.changingedu.com static-dev.changingedu.com static.changingedu.com static-fws.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;
        set $context "";
        location / {
           set $context "static";
           proxy_set_header Host   "static-tst.changingedu.com";
           proxy_pass http://127.0.0.1:82;
        }
        location /dorauistatic {
           set $context "dorauistatic";
           proxy_set_header Host   "static-tst.changingedu.com";
           proxy_pass http://docker-ingress;
        }
    }

    server {
        #server_name tp-tst.changingedu.com tp-dev.changingedu.com tp.changingedu.com tp-tst1.changingedu.com;
        server_name tp-tst.changingedu.com; 
        listen 80 ;
        listen 443 ssl http2 ;
         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;
        set $context "";
        location / {
           #set $context "static";
           proxy_set_header Host   "tp-tst.changingedu.com";
           proxy_pass http://127.0.0.1:82;
        }
    }

    server {
        server_name livestatic-tst.changingedu.com livestatic-dev.changingedu.com livestatic.changingedu.com livestatic-fws.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
         # default public
         ssl_certificate      cert/changingedu.com.crt;
         ssl_certificate_key  cert/changingedu.com.key;
        include proxy.conf;

        set $context "livestatic";
        location / {
           proxy_set_header Host   "livestatic-tst.changingedu.com";
           proxy_pass http://127.0.0.1:82;
        }
    }


    ## default qingjy Domain ( www.qingjy.cn and qingjy.cn ssl )
    server {
         server_name  ~^(\S+)\.qingjy\.cn ;
         server_name  qingjy.cn;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;

         # host replace
         set $prefix "";
         set $prefix $1;
         set $proxyhost "qingjy.cn" ;
         if ($prefix != ""){
           set  $proxyhost "$prefix$envtype.qingjy.cn";
         }
         # qingjy.cn
         ssl_certificate      cert/qingjy.cn.crt;
         ssl_certificate_key  cert/qingjy.cn.key;

         include    core-proxy-params.conf;
         location / {
            proxy_set_header Host   "$proxyhost";
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:82;
         }
    }

    server {
         server_name  ~^(\S+)\.idc\.cedu\.cn$;
         # host replace
         set $prefix $1;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;

         # inner
         ssl_certificate      cert/idc.cedu.cn.crt;
         ssl_certificate_key  cert/idc.cedu.cn.key;
         access_log /home/logs/nginx/idc.access.log main;
         error_log  /home/logs/nginx/idc.error.log debug;
         include    core-proxy-params.conf;
 
         set $context "";
         location ~ /(\w+) {
            set $context "$1";
            proxy_set_header Host  $host; 
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( $prefix ~ "tst$" ){
               proxy_pass http://127.0.0.1:82;
            }
            if ( $prefix ~ "dev$" ){
               proxy_pass http://127.0.0.1:81;
            }
            proxy_pass http://127.0.0.1:84;
         }

         location = / {
            proxy_set_header Host  $host;
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            if ( $prefix ~ "tst$" ){
               proxy_pass http://127.0.0.1:82;
            }
            if ( $prefix ~ "dev$" ){
               proxy_pass http://127.0.0.1:81;
            }
            proxy_pass http://127.0.0.1:84;
         }
    }


    server {
         server_name  gateway.tst.idc.cedu.cn proxygw.tst.idc.cedu.cn;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;
         # inner
         ssl_certificate      cert/idc.cedu.cn.crt;
         ssl_certificate_key  cert/idc.cedu.cn.key;

         include    core-proxy-params.conf;
         set $context "";
         #location ~ /orderservice/ {
         #   set $context "orderservice";
         #   proxy_set_header Host  $host;
         #   proxy_set_header Upgrade     $http_upgrade;
         #   proxy_set_header Connection  $connection_upgrade;
         #   proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
         #   proxy_pass http://docker-ingress;
         #   mirror /mirror;
         #}

         #location = /mirror {
         #    internal;
         #    mirror_request_body on;
         #    proxy_pass http://172.20.13.172:8080$request_uri;
         #}

            if ( $http_reqtarget ){
              rewrite /(.*) /contrast/$1 ;
            }
            location ~ ^/contrast {
              rewrite  /contrast/(.*) /$1 break;
              proxy_set_header Host  "gateway.contrast.idc.cedu.cn";
              proxy_pass http://docker-ingress;
            }

         location  ~ /(\w+) {
            set $context "$1";
            #proxy_set_header Host  $host;
            proxy_set_header Host  "gateway.tst.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://docker-ingress;
         }
    }


    server {
         server_name   gateway.tst1.idc.cedu.cn 
                      gateway.tst2.idc.cedu.cn  gateway.tst3.idc.cedu.cn 
                      gateway.fws.idc.cedu.cn   gateway.fat.idc.cedu.cn 
                      gateway.lpt.idc.cedu.cn   gateway.dev.idc.cedu.cn 
                      gateway.uat.idc.cedu.cn   ;
         listen 80 ;
         listen [::]:80 ;
         listen 443 ssl http2 ;
         listen [::]:443 ssl http2 ;
         # inner
         ssl_certificate      cert/idc.cedu.cn.crt;
         ssl_certificate_key  cert/idc.cedu.cn.key;

         include    core-proxy-params.conf;
         set $context "";
         location  ~ /(\w+) {
            set $context "$1";
            proxy_set_header Host  $host;
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://docker-ingress;
         }
    }    

    server {
         server_name ~gateway.(dev|tst|tst1|tst2|tst3|fws|fws1|fws2|fws3|lpt).idc.hfjy.com;
         #server_name ~gateway\.(\w+)\.idc\.hfjy\.com$;

         listen 80 ;
         listen [::]:80 ;

         set $envtype $1;

         include    core-proxy-params.conf;
         set $context "";
         location  ~ /(\w+) {
            set $context "$1";
            proxy_set_header Host "gateway.$envtype.idc.cedu.cn";
            proxy_set_header Upgrade     $http_upgrade;
            proxy_set_header Connection  $connection_upgrade;
            proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://docker-ingress;
         }
    }

    server{
        server_name put.idc.cedu.cn webdav.idc.cedu.cn;
        listen 80 ;
        client_max_body_size 3000m;
        include proxy.conf ;
        location  / {
          proxy_pass http://172.20.13.215:80;
        }
    }


    server {
       listen 10000 ;
       location /sts-status {
            #stream_server_traffic_status_display;
            #stream_server_traffic_status_display_format html;
        }
        location /vts-status {
            #vhost_traffic_status_display;
            #vhost_traffic_status_display_format html;
        }
    }
    
    server{
        server_name kibana-t.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;        
        client_max_body_size 3000m;
        include proxy.conf ;
        location  / {
          proxy_pass https://172.29.2.253:5601;
        }
    }

    server{
        server_name es-api-tst.changingedu.com;
        listen 80 ;
        listen 443 ssl http2 ;
        ssl_certificate      cert/changingedu.com.crt;
        ssl_certificate_key  cert/changingedu.com.key;
        client_max_body_size 3000m;
        include proxy.conf ;
        location  / {
          proxy_pass https://172.29.3.164:9200;
        }
    }


    include cas-httpd-upstream.conf;

    include docker-upstream.conf;
    include graylog.conf;
    include schemaregistry.conf;
    include vhost/dev-port-81/*.conf;
    include vhost/tst-port-82/*.conf;
    include vhost/pre-port-83/*.conf;
    include vhost/runtime-port-84/*.conf;
    
}
